
unsigned button_millis;

void random_delay(long delay_value, int random_value)
{
  delay_value = delay_value + random(-random_value, random_value);
  if(delay_value < 0) return;
  delay(delay_value);
} 





void setup() {
  
  for(int i = 2; i<=13; i++){
    pinMode(i, OUTPUT);
  }
  for(int j = 22; j<=50; j++){
    pinMode(j, OUTPUT);
  }
  randomSeed(analogRead(0));
}

void loop() {
  Q_Down(200,0);
  Q_Up(100,0);
  W_Down(200,0);
  W_Up(100,0);
  E_Down(200,0);
  E_Up(100,0);
  R_Down(200,0);
  R_Up(100,0);


  A_Down(200,0);
  A_Up(100,0);
  S_Down(200,0);
  S_Up(100,0);
  D_Down(200,0);
  D_Up(100,0);  
  F_Down(200,0);
  F_Up(100,0);

  Z_Down(200,0);
  Z_Up(100,0);
  X_Down(200,0);
  X_Up(100,0);
  C_Down(200,0);
  C_Up(100,0);
  V_Down(200,0);
  V_Up(100,0);

  Shift_Down(200,0);
  Shift_Up(100,0);
  Ctrl_Down(200,0);
  Ctrl_Up(100,0);
  Alt_Down(200,0);
  Alt_Up(100,0);

  Insert_Down(200,0);
  Insert_Up(100,0);
  Home_Down(200,0);
  Home_Up(100,0);
  PageUp_Down(200,0);
  PageUp_Up(100,0);
  Delete_Down(200,0);
  Delete_Up(100,0);
  End_Down(200,0);
  End_Up(100,0);
  PageDown_Down(200,0);
  PageDown_Up(100,0);

  Up_Down(200,0);
  Up_Up(100,0);
  Left_Down(200,0);
  Left_Up(100,0);
  Down_Down(200,0);
  Down_Up(100,0);
  Right_Down(200,0);
  Right_Up(100,0);



}












//##########################
//#########[방향키]##########
//##########################

//========================== "↑"

void Up_Down(int basic, int margin){
  digitalWrite(23, HIGH);
  random_delay(basic, margin);
}
void Up_Up(int basic, int margin){
  digitalWrite(23, LOW);
  random_delay(basic, margin);
}

//========================== "←"

void Left_Down(int basic, int margin){
  digitalWrite(45, HIGH);
  random_delay(basic, margin);
}
void Left_Up(int basic, int margin){
  digitalWrite(45, LOW);
  random_delay(basic, margin);
}

//========================== "↓"

void Down_Down(int basic, int margin){
  digitalWrite(27, HIGH);
  random_delay(basic, margin);
}
void Down_Up(int basic, int margin){
  digitalWrite(27, LOW);
  random_delay(basic, margin);
}

//========================== "→"

void Right_Down(int basic, int margin){
  digitalWrite(46, HIGH);
  random_delay(basic, margin);
}
void Right_Up(int basic, int margin){
  digitalWrite(46, LOW);
  random_delay(basic, margin);
}

//##########################
//#########[특수키]##########
//##########################

//========================== "Insert"

void Insert_Down(int basic, int margin){
  digitalWrite(25, HIGH);
  random_delay(basic, margin);
}
void Insert_Up(int basic, int margin){
  digitalWrite(25, LOW);
  random_delay(basic, margin);
}

//========================== "Home"

void Home_Down(int basic, int margin){
  digitalWrite(24, HIGH);
  random_delay(basic, margin);
}
void Home_Up(int basic, int margin){
  digitalWrite(24, LOW);
  random_delay(basic, margin);
}

//========================== "PageUp"

void PageUp_Down(int basic, int margin){
  digitalWrite(39, HIGH);
  random_delay(basic, margin);
}
void PageUp_Up(int basic, int margin){
  digitalWrite(39, LOW);
  random_delay(basic, margin);
}

//========================== "Delete"

void Delete_Down(int basic, int margin){
  digitalWrite(29, HIGH);
  random_delay(basic, margin);
}
void Delete_Up(int basic, int margin){
  digitalWrite(29, LOW);
  random_delay(basic, margin);
}

//========================== "End"

void End_Down(int basic, int margin){
  digitalWrite(22, HIGH);
  random_delay(basic, margin);
}
void End_Up(int basic, int margin){
  digitalWrite(22, LOW);
  random_delay(basic, margin);
}

//========================== "PageDown"

void PageDown_Down(int basic, int margin){
  digitalWrite(31, HIGH);
  random_delay(basic, margin);
}
void PageDown_Up(int basic, int margin){
  digitalWrite(31, LOW);
  random_delay(basic, margin);
}

//##########################
//########[사이드키]#########
//##########################
//========================== "Ctrl"

void Ctrl_Down(int basic, int margin){
  digitalWrite(35, HIGH);
  random_delay(basic, margin);
}
void Ctrl_Up(int basic, int margin){
  digitalWrite(35, LOW);
  random_delay(basic, margin);
}

//========================== "Alt"

void Alt_Down(int basic, int margin){
  digitalWrite(38, HIGH);
  random_delay(basic, margin);
}
void Alt_Up(int basic, int margin){
  digitalWrite(38, LOW);
  random_delay(basic, margin);
}

//========================== "Shift"

void Shift_Down(int basic, int margin){
  digitalWrite(33, HIGH);
  random_delay(basic, margin);
}
void Shift_Up(int basic, int margin){
  digitalWrite(33, LOW);
  random_delay(basic, margin);
}

//##########################
//##########[3열]###########
//##########################

//========================== "Z"

void Z_Down(int basic, int margin){
  digitalWrite(26, HIGH);
  random_delay(basic, margin);
}
void Z_Up(int basic, int margin){
  digitalWrite(26, LOW);
  random_delay(basic, margin);
}

//========================== "X"

void X_Down(int basic, int margin){
  digitalWrite(41, HIGH);
  random_delay(basic, margin);
}
void X_Up(int basic, int margin){
  digitalWrite(41, LOW);
  random_delay(basic, margin);
}

//========================== "C"

void C_Down(int basic, int margin){
  digitalWrite(40, HIGH);
  random_delay(basic, margin);
}
void C_Up(int basic, int margin){
  digitalWrite(40, LOW);
  random_delay(basic, margin);
}

//========================== "V"

void V_Down(int basic, int margin){
  digitalWrite(43, HIGH);
  random_delay(basic, margin);
}
void V_Up(int basic, int margin){
  digitalWrite(43, LOW);
  random_delay(basic, margin);
}

//##########################
//##########[2열]###########
//##########################

//========================== "A"

void A_Down(int basic, int margin){
  digitalWrite(34, HIGH);
  random_delay(basic, margin);
}
void A_Up(int basic, int margin){
  digitalWrite(34, LOW);
  random_delay(basic, margin);
}

//========================== "S"

void S_Down(int basic, int margin){
  digitalWrite(32, HIGH);
  random_delay(basic, margin);
}
void S_Up(int basic, int margin){
  digitalWrite(32, LOW);
  random_delay(basic, margin);
}

//========================== "D"39

void D_Down(int basic, int margin){
  digitalWrite(42, HIGH);
  random_delay(basic, margin);
}
void D_Up(int basic, int margin){
  digitalWrite(42, LOW);
  random_delay(basic, margin);
}

//========================== "F"40

void F_Down(int basic, int margin){
  digitalWrite(44, HIGH);
  random_delay(basic, margin);
}
void F_Up(int basic, int margin){
  digitalWrite(44, LOW);
  random_delay(basic, margin);
}

//##########################
//##########[1열]###########
//##########################

//========================== "Q"

void Q_Down(int basic, int margin){
  digitalWrite(28, HIGH);
  random_delay(basic, margin);
}
void Q_Up(int basic, int margin){
  digitalWrite(28, LOW);
  random_delay(basic, margin);
}

//========================== "W"

void W_Down(int basic, int margin){
  digitalWrite(37, HIGH);
  random_delay(basic, margin);
}
void W_Up(int basic, int margin){
  digitalWrite(37, LOW);
  random_delay(basic, margin);
}

//========================== "E"

void E_Down(int basic, int margin){
  digitalWrite(36, HIGH);
  random_delay(basic, margin);
}
void E_Up(int basic, int margin){
  digitalWrite(36, LOW);
  random_delay(basic, margin);
}

//========================== "R"

void R_Down(int basic, int margin){
  digitalWrite(30, HIGH);
  random_delay(basic, margin);
}
void R_Up(int basic, int margin){
  digitalWrite(30, LOW);
  random_delay(basic, margin);
}
